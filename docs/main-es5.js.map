{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/characters.service.ts","webpack:///src/app/details/details.component.ts","webpack:///src/app/details/details.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/search.pipe.ts","webpack:///src/app/side/side.component.ts","webpack:///src/app/side/side.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","imports","providers","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","AppComponent","title","data","characterData","getData","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","schemas","CharactersService","http","URL","apiUrl","localUrl","entireList","get","providedIn","DetailsComponent","FooterComponent","color","HeaderComponent","SearchPipe","values","term","filter","item","split","some","key","hasOwnProperty","RegExp","test","name","SideComponent","_characterService","characters","emitCharacter","getMockCharacters","subscribe","map","index","height","mass","hair_color","skin_color","eye_color","birth_year","gender","created","edited","emit","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatCardModule,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatCardModule,\n    BrowserAnimationsModule\n  ],\n  providers: []\n})\n\nexport class AngularMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DetailsComponent } from './details/details.component';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\n  { path: 'details', component: DetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sw-app';\n  characterData: object;\n\n  getData(data: object) {\n    this.characterData = data;\n  }\n\n\n}\n","<div class=\"container\">\n  <app-header></app-header>\n\n  <app-side (emitCharacter)=\"getData($event)\"></app-side>\n\n  <app-details [capturedCharacter]=\"characterData\"></app-details>\n\n  <app-footer></app-footer>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { HeaderComponent } from './header/header.component';\nimport { SideComponent } from './side/side.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { DetailsComponent } from './details/details.component';\nimport { CharactersService } from './characters.service';\nimport { SearchPipe } from './search.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SideComponent,\n    FooterComponent,\n    DetailsComponent,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    FormsModule\n  ],\n  providers: [CharactersService],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport {environment} from './../environments/environment';\nimport {ACharacter} from './characters.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharactersService {\n  private URL: string = environment.apiUrl;\n  private localUrl: string = environment.localUrl;\n\n  public entireList = [];\n\n  constructor(private http: HttpClient) {}\n\n  getMockCharacters(): Observable<ACharacter[]> {\n    return this.http.get<ACharacter[]>(this.localUrl);\n  }\n\n  //\n  // loop thru the available pages on SWAPI and gets all the characters asynchronously\n  //\n\n  // getAllCharacters = async (pageNo = 1) => {\n  //   let actualUrl = this.URL + `?page=${pageNo}`;\n  //   let apiResults = await fetch(actualUrl)\n  //   .then(resp => {\n  //       return resp.json();\n  //   })\n  //\n  //   return apiResults.results;\n  // }\n  //\n  // getEntireList = async (pageNo = 1) => {\n  //   var results = await this.getAllCharacters(pageNo);\n  //   console.log(\"Retreiving data from API for page : \" + pageNo);\n  //   if (results && results.length>0) {\n  //     return results.concat(await this.getEntireList(pageNo+1));\n  //   } else {\n  //     return results;\n  //   }\n  // };\n  //\n  //\n  // getCharacters = (async () => {\n  //     return this.entireList = await this.getEntireList();\n  // })();\n  //\n  // mappedNames = () => {\n  //   return this.entireList.map(item => item.name);\n  // }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ACharacter } from '../characters.interface';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  character: object;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input() capturedCharacter: any;\n\n}\n","<main>\n  <mat-card class=\"card-light\" *ngIf=\"!capturedCharacter\">\n    <h2>Click on any of the character cards on the left, to view their details</h2>\n  </mat-card>\n  <mat-card class=\"card-light\" *ngIf=\"capturedCharacter\">\n    <div class=\"inline-flex padding-30 reverse\">\n      <md-card-header>\n        <span class=\"inline-flex baseline\">Name: <h1>{{ capturedCharacter.name || '-'}}</h1></span>\n        <span class=\"inline-flex baseline\">Height: <h3>{{ capturedCharacter.height || '-'}}</h3></span>\n        <span class=\"inline-flex baseline\">Mass: <h3>{{ capturedCharacter.mass || '-'}}</h3></span>\n        <span class=\"inline-flex baseline\">Hair color:<h3>{{ capturedCharacter.hair_color || '-'}}</h3></span>\n        <span class=\"inline-flex baseline\">Skin color:<h3>{{ capturedCharacter.skin_color || '-'}}</h3></span>\n        <span class=\"inline-flex baseline\">Eye color: <h3>{{ capturedCharacter.eye_color || '-'}}</h3></span>\n        <span class=\"inline-flex baseline\">Birth year:<h3>{{ capturedCharacter.birth_year || '-'}}</h3></span>\n        <span class=\"inline-flex baseline\">Gender: <h3>{{ capturedCharacter.gender || '-'}}</h3></span>\n\n        <mat-card-subtitle>\n          <span class=\"inline-flex baseline\">Created: <h3>{{ (capturedCharacter.created | date: 'fullDate' )|| '-'}}</h3></span>\n          <span class=\"inline-flex baseline\">Edited: <h3>{{ (capturedCharacter.edited | date: 'fullDate' ) || '-'}}</h3></span>\n        </mat-card-subtitle>\n      </md-card-header>\n      <div>\n        <img class=\"large-image rounded-corners\" [src]=\"'../assets/images/'+capturedCharacter.id+'.jpg'\">\n      </div>\n    </div>\n  </mat-card>\n</main>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  color = '#ffeb3b';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <mat-toolbar color=\"background-color\" class=\"flex\">\n      <span class=\"footer_brand\" [ngStyle]=\"{'color': color}\">\n        Galactic Empire © 2020\n      </span>\n    </mat-toolbar>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <mat-toolbar color=\"primary\" class=\"flex\">\n    <mat-toolbar-row>\n      <div class=\"brand\">\n        <span class=\"brand__heading\">Star Wars</span>\n        <hr class=\"brand__line\">\n        <h4 class=\"brand__subheading\">Character Lookup</h4>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</header>\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n  public transform(values, keys: string, term: string) {\n    return (values || []).filter(item => keys.split(',').some(key => item.hasOwnProperty(key) && new RegExp(term, 'gi').test(item[key])));\n  }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\nimport { CharactersService } from '../characters.service';\n\n@Component({\n  selector: 'app-side',\n  templateUrl: './side.component.html',\n  styleUrls: ['./side.component.css'],\n  providers: [CharactersService]\n})\nexport class SideComponent implements OnInit {\n  query: string;\n  public characters = [];\n\n  constructor(private _characterService: CharactersService){}\n\n  ngOnInit() {\n    this._characterService.getMockCharacters()\n      .subscribe(data => {\n        // return this.characters = data;\n        this.characters = data.map((item, index) => {\n          return {\n                id: index,\n                name: item.name,\n                height: item.height,\n                mass: item.mass,\n                hair_color: item.hair_color,\n                skin_color: item.skin_color,\n                eye_color: item.eye_color,\n                birth_year: item.birth_year,\n                gender: item.gender,\n                created: item.created,\n                edited: item.edited\n              };\n        });\n        return this.characters;\n      });\n    // this.characters = this._characterService.getCharacters;\n  }\n\n  @Output() emitCharacter: EventEmitter<any> = new EventEmitter();\n\n  sendData(data){\n    this.emitCharacter.emit(data);\n  }\n\n}\n","<side>\n  <div style=\"margin:5px 15px;\">\n    <mat-card class=\"search-card\">\n      <mat-card-content>\n        <mat-formt-field>\n          <input placeholder=\"Character name...\" [(ngModel)]=\"query\" class=\"search-input\"/>\n        </mat-formt-field>\n      </mat-card-content>\n    </mat-card>\n    <ul *ngFor=\"let c of characters | search:'name':query; let i = index\">\n      <a routerLink=\"/details\" (click)=\"sendData(c)\">\n        <mat-card matRipple class=\"mat-elevation-z4\">\n          <mat-card-header>\n            <img mat-card-avatar class=\"example-header-image\" [src]=\"'../assets/images/'+ c.id +'.jpg'\">\n            <mat-card-title>\n              {{ c.name }}\n            </mat-card-title>\n            <mat-card-subtitle class=\"bottom-hard\">\n              {{ c.gender }}\n            </mat-card-subtitle>\n          </mat-card-header>\n        </mat-card>\n      </a>\n    </ul>\n  </div>\n</side>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://swapi.co/api/people/',\n  localUrl: '/assets/data/characters.json',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}